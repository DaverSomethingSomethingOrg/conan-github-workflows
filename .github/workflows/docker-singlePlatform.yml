######################################################################
# docker-singlePlatform.yml
#
# Copyright Â© 2025 David L. Armstrong
#
# This workflow will process a single Docker container build
# Special provisions are made for installing toolchain packages
# with a specified prefix.
#

name: Docker singlePlatform toolchain container image build

on:
  workflow_call:
    inputs:
      is_enabled:
        type: boolean
        default: true
      runner_selection:
        type: string
        default: self-hosted
      dockerfile:
        type: string
      docker_context:
        type: string
      image_tag:
        type: string
        required: true
        # default: "nexus.homelab/conan-base-ubuntu:aarch64-latest"
      build_target:
        type: string
        required: false
      toolchain_prefix:
        type: string
        required: false
      package_prefix:
        type: string
        required: false
      container_registry:
        type: string
        required: false
      container_push:
        type: boolean
        default: false
      container_username:
        type: string
        required: false
      python_requirements:
        type: string
        required: false
    secrets:
      GH_TOKEN:
        required: false
      container_password:
        required: false
      install_keyring:
        required: false
      install_ca:
        required: false

jobs:
  docker_build:
    if: ${{ inputs.is_enabled }}
    runs-on: ${{ inputs.runner_selection }}
#    container:
#      image: ${{ inputs.container_image }}
#      credentials:
#        username: ${{ github.actor }}
#        password: ${{ secrets.GH_TOKEN }}

    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Login to Docker Registry
        env:
          CONTAINER_PASSWORD: ${{ secrets.container_password }}
        if: ${{ env.CONTAINER_PASSWORD }}
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.container_registry}}
          username: ${{ inputs.container_username }}
          password: ${{ secrets.container_password }}

      - name: Install Certs, Keys, and Python Requirements File
        env: 
          INSTALL_KEYRING: ${{ secrets.install_keyring }}
          INSTALL_CA: ${{ secrets.install_ca }}
        run: |
          context_dir="."
          if [ -n "${{ inputs.docker_context }}" ]; then
              context_dir="${{ inputs.docker_context }}"
          fi

          mkdir -p "${context_dir}/keys"
          echo "${INSTALL_KEYRING}" | base64 --decode > "${context_dir}/keys/internal-keyring.gpg"
          echo "${INSTALL_CA}" > "${context_dir}/keys/InternalCA.crt"

          if [ -n "${{ inputs.python_requirements }}" ]; then
            cp -p "${{ inputs.python_requirements }}" "${context_dir}/python-requirements.txt"
          fi

      - name: Build Docker image
        uses: docker/build-push-action@v6
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          push: ${{ inputs.container_push }}
          tags: ${{ inputs.image_tag }}
          # annotations: ${{ steps.meta.outputs.annotations }}
          context: ${{ inputs.docker_context }}
          file: ${{ inputs.dockerfile }}
          target: ${{ inputs.build_target }}
          build-args: |
            PKG_PREFIX=${{ inputs.package_prefix }}
            TOOLCHAIN_PREFIX=${{ inputs.toolchain_prefix }}
          secret-envs: |
            gh_token=GH_TOKEN
